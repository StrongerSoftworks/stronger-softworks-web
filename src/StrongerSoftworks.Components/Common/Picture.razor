@using StrongerSoftworks.Models
<picture>
    @foreach (var size in Sizes)
    {
        var srcset = ImageUrl.Replace(extension, "-" + size.Width + ".avif 1x, ");
        srcset += ImageUrl.Replace(extension, "-" + (size.Width * 1.5) + ".avif 1.5x, ");
        srcset += ImageUrl.Replace(extension, "-" + (size.Width * 2) + ".avif 2x ");

        <source
            srcset="@srcset"
            type="image/avif"
            media="@("(max-width: " + size.Breakpoint + "px)")"
            width="@size.Width" />
    }
    <img
        loading="lazy"
        src="@(ImageUrl.Replace(extension, "-" + Width + ".avif"))"
        alt="@AltText"
        class="@(CssClass ?? "img-fluid")"
        width="@Width"
        type="image/avif"
    />
</picture>


@code {
    [Parameter] public PhotoSize[] Sizes { get; set; }
    [Parameter] public required string ImageUrl { get; set; }
    [Parameter] public required string AltText { get; set; }
    [Parameter] public string CssClass { get; set; } = "";
    [Parameter] public required int Width { get; set; }

    private string extension = ".png";

    protected override void OnParametersSet()
    {
        extension = ImageUrl.Substring(ImageUrl.LastIndexOf('.'));
        base.OnParametersSet();
    }
}
