name: 'Dotnet Static To S3'

on: workflow_dispatch

permissions:
  id-token: write
  contents: read

jobs:
  build-and-deploy:
    name: 'Build and Deploy'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: [ '8.x' ]
    environment: production
    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - uses: actions/setup-node@v4
      with:
        node-version: 20.x

    - name: Install npm Dependencies
      working-directory: ./src/${{ vars.WEB_PROJECT_NAME }}
      run: npm install

    - name: Build assets
      working-directory: ./src/${{ vars.WEB_PROJECT_NAME }}
      run: npm run build

    # - name: Build dotnet
    #   working-directory: ./src/${{ vars.WEB_PROJECT_NAME }}
    #   run: dotnet build --configuration Release
    # - name: Test
    #   working-directory: ./src
    #   run: dotnet test

    - name: Build Static Site
      working-directory: ./src/${{ vars.WEB_PROJECT_NAME }}
      run: dotnet run --launch-profile ssg

    - name: Post Build
      working-directory: ./src/${{ vars.WEB_PROJECT_NAME }}
      run: npm run gzip

    - name: Configure aws credentials
      if: github.ref == 'refs/heads/main'
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: ${{vars.REGION}}
        role-to-assume: ${{vars.ROLE}}

    - name: Deploy to S3
      if: github.ref == 'refs/heads/main'
      run: |
        aws s3 sync ./out s3://${{ vars.BUCKET }} \
        --exclude "*.html" \
        --exclude "*.css" \
        --exclude "*.js" \
        --cache-control max-age=31536000 --delete

    - name: Deploy to S3 CSS/JS
      if: github.ref == 'refs/heads/main'
      run: |
        aws s3 sync ./out s3://${{ vars.BUCKET }} \
        --exclude "*" \
        --include "*.css" --content-encoding gzip \
        --include "*.js" --content-encoding gzip \
        --cache-control max-age=31536000 --delete

    - name: Deploy to S3 HTML
      if: github.ref == 'refs/heads/main'
      run: |
        aws s3 sync ./out s3://${{ vars.BUCKET }} \
        --exclude "*" \
        --include "*.html" --content-encoding gzip \
        --delete

    - name: Invalidate CloudFront cache
      if: github.ref == 'refs/heads/main'
      run: |
        aws cloudfront create-invalidation --distribution-id ${{vars.DISTRIBUTION_ID}} --paths "/*"
